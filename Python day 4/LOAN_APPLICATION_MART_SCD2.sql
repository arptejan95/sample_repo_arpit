CREATE OR REPLACE PROCEDURE DISHA_L2_CURATED.BASE_HARDCODE.LOAD_TEST_LOAN_APPLICATION_MART()
RETURNS STRING
LANGUAGE SQL
EXECUTE AS OWNER
AS 
$$
DECLARE
	MAX_SURROGATE_KEY NUMBER;
BEGIN

CREATE TABLE IF NOT EXISTS DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART CLUSTER BY (DAILY_DATE)(
	SURROGATE_ID NUMBER,
	DURABLE_ID NUMBER,
	LOAN_APPLICATION_NO VARCHAR,
	LOAN_APPLICATION_NAME VARCHAR,
	DEL_FLAG VARCHAR,
	PRODUCT_ID VARCHAR,
	VENDOR_ID VARCHAR,
	RO_ID VARCHAR,
	BRANCH_ID VARCHAR,
	LEAD_ID VARCHAR,
	DAILY_DATE DATE,
	DEAL_FORWARD_DATE DATE,
	REQUEST_LOAN_AMOUNT FLOAT,
	IMD_SUBMITTED_DATE DATE,
	SANCTION_DATE DATE,
	REJECTION_DATE DATE,
	CREATED_DATE_LAC DATE,
	LOGIN_COUNT NUMBER(38,0),
	LOGIN_AMOUNT FLOAT,
	IMD_CLEARED_LOGINS_COUNT NUMBER(38,0),
	IMD_CLEARED_LOGINS_AMOUNT FLOAT,
	SANCTION_COUNT NUMBER(38,0),
	SANCTION_AMOUNT FLOAT,
	WIP_COUNT NUMBER(38,0),
	WIP_AMOUNT FLOAT,
	SUD_COUNT NUMBER(38,0),
	SUD_AMOUNT FLOAT,
	REJECT_COUNT NUMBER(38,0),
	REJECT_AMOUNT FLOAT,
	LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT NUMBER(38,0),
	DSA_NAME VARCHAR,
	IMD_PAYMENT_MODE VARCHAR,
	IMD_STATUS VARCHAR,
	DRAFT_FILE_STATUS VARCHAR,
	REJECTION_REASON_SUBMISSION VARCHAR,
	LOAN_APPLICATION_STAGE VARCHAR,
	PRODUCT_CATEGORY VARCHAR,
	CONSTITUTION VARCHAR,
	SCHEME VARCHAR,
	ROW_HASH VARCHAR AS SHA2(ARRAY_TO_STRING([LOAN_APPLICATION_NO, LOAN_APPLICATION_NAME, PRODUCT_ID, VENDOR_ID, RO_ID, BRANCH_ID, LEAD_ID, DEAL_FORWARD_DATE, REQUEST_LOAN_AMOUNT, IMD_SUBMITTED_DATE, SANCTION_DATE, REJECTION_DATE, CREATED_DATE_LAC, LOGIN_COUNT, LOGIN_AMOUNT, IMD_CLEARED_LOGINS_COUNT, IMD_CLEARED_LOGINS_AMOUNT, SANCTION_COUNT, SANCTION_AMOUNT, WIP_COUNT, WIP_AMOUNT, SUD_COUNT, SUD_AMOUNT, REJECT_COUNT, REJECT_AMOUNT, LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT, DSA_NAME, IMD_PAYMENT_MODE, IMD_STATUS, DRAFT_FILE_STATUS, REJECTION_REASON_SUBMISSION, LOAN_APPLICATION_STAGE, DEL_FLAG, PRODUCT_CATEGORY, CONSTITUTION, SCHEME], ''), 256),
	START_TIMESTAMP TIMESTAMP,
	END_TIMESTAMP TIMESTAMP,
	CURRENT_FLAG BOOLEAN
);

-- STEP 1: DELETE EXISTING DATA FOR CURRENT DATE TO AVOID DUPLICATES
--    DELETE FROM DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART WHERE DAILY_DATE = CURRENT_DATE;
	
	--GET THE CURRENT MAXIMUM SURROGATE KEY
	SELECT COALESCE(MAX(SURROGATE_ID), 0) INTO :MAX_SURROGATE_KEY FROM DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART;	
	
	DROP TABLE IF EXISTS DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART_PREFINAL;
	
	CREATE TEMPORARY TABLE DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART_PREFINAL AS
	SELECT 
        LOAN_APPLICATION_NO,
        LOAN_APPLICATION_NAME,
        PRODUCT_ID,
        VENDOR_ID,
        RO_ID,
        BRANCH_ID,
        LEAD_ID,
        CURRENT_DATE() AS DAILY_DATE,
        DEAL_FORWARD_DATE,
        REQUEST_LOAN_AMOUNT,
        IMD_SUBMITTED_DATE,
        SANCTION_DATE,
        REJECTION_DATE,
        CREATED_DATE_LAC,
        LOGIN_COUNT,
        LOGIN_AMOUNT,
        IMD_CLEARED_LOGINS_COUNT,
        IMD_CLEARED_LOGINS_AMOUNT,
        SANCTION_COUNT,
        SANCTION_AMOUNT,
        WIP_COUNT,
        WIP_AMOUNT,
        SUD_COUNT,
        SUD_AMOUNT,
        REJECT_COUNT,
        REJECT_AMOUNT,
        LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT,
        DSA_NAME,
        IMD_PAYMENT_MODE,
        IMD_STATUS,
        DRAFT_FILE_STATUS,
        REJECTION_REASON_SUBMISSION,
        LOAN_APPLICATION_STAGE,
        DEL_FLAG,
        PRODUCT_CATEGORY,
        CONSTITUTION,
        SCHEME
    FROM (
        SELECT 
            LAD.UNIQUE_SYS_ID AS LOAN_APPLICATION_NO,
            LAD.LOAN_APPLICATION_NO AS LOAN_APPLICATION_NAME,
            LAD.PRODUCT_ID,
            LAD.VENDOR_ID,
            LAD.RO_ID,
            LAD.BRANCH_ID,
            LAD.LEAD_ID,
            LAD.REQUEST_LOAN_AMOUNT,
            LAD.CREATED_DATE AS CREATED_DATE_LAC,
            LAD.REJECT_DETAILED_LOAN_REASON AS REJECTION_REASON_SUBMISSION,
            LAD.LOAN_APPLICATION_STAGE,
            
            -- IMD CLEARED LOGINS
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND LAH_IMD_SUBMITTED.IMD_SUBMITTED_DATE IS NOT NULL
                AND BRANCH_ID IS NOT NULL
                THEN 1 
                ELSE 0 
            END AS IMD_CLEARED_LOGINS_COUNT,
            
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND LAH_IMD_SUBMITTED.IMD_SUBMITTED_DATE IS NOT NULL
                AND BRANCH_ID IS NOT NULL
                THEN LAD.REQUEST_LOAN_AMOUNT 
                ELSE 0 
            END AS IMD_CLEARED_LOGINS_AMOUNT,
            
            -- WIP CALCULATIONS
            CASE 
                WHEN UPPER(LAD.RESANCTION_FLAG) = 'FALSE'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) IN ('CREDIT ASSESSMENT','APPLICATION PROCESSING','VERIFY DEVIATIONS','CREDIT APPROVAL')
                AND UPPER(LAD.LOAN_APPLICATION_STATUS) IN ('IN PROGRESS','DEAL CREATED')
                THEN 1 
                ELSE 0 
            END AS WIP_COUNT,
            
            CASE 
                WHEN UPPER(LAD.RESANCTION_FLAG) = 'FALSE'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) IN ('CREDIT ASSESSMENT','APPLICATION PROCESSING','VERIFY DEVIATIONS','CREDIT APPROVAL')
                AND UPPER(LAD.LOAN_APPLICATION_STATUS) IN ('IN PROGRESS','DEAL CREATED')
                THEN REQUEST_LOAN_AMOUNT 
                ELSE 0 
            END AS WIP_AMOUNT,
            
            -- SUD CALCULATIONS
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND LAD.BRANCH_ID IS NOT NULL
                AND ((UPPER(LAD.LOAN_APPLICATION_STAGE) IN ('AGREEMENT SIGNING','SANCTION','DISBURSEMENT') 
                    AND UPPER(LAD.LOAN_APPLICATION_STATUS) IN ('LOAN API INITIATED','IN PROGRESS','PUSHED TO OMNI'))
                    OR (LOAN_APPLICATION_STATUS IN ('IN PROGRESS','DEAL CREATED') AND RESANCTION_FLAG = 'TRUE'))
                THEN 1 
                ELSE 0 
            END AS SUD_COUNT,
            
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND LAD.BRANCH_ID IS NOT NULL
                AND ((UPPER(LAD.LOAN_APPLICATION_STAGE) IN ('AGREEMENT SIGNING','SANCTION','DISBURSEMENT') 
                    AND UPPER(LAD.LOAN_APPLICATION_STATUS) IN ('LOAN API INITIATED','IN PROGRESS','PUSHED TO OMNI'))
                    OR (LOAN_APPLICATION_STATUS IN ('IN PROGRESS','DEAL CREATED') AND RESANCTION_FLAG = 'TRUE'))
                THEN LAD.SANCTION_AMOUNT 
                ELSE 0 
            END AS SUD_AMOUNT,
            
            -- LOGIN CALCULATIONS
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) <> 'DRAFT'
                AND LAD.BRANCH_ID IS NOT NULL 
                AND LAH_DEAL.LOAN_APPLICATION_NO IS NOT NULL
                THEN 1 
                ELSE 0 
            END AS LOGIN_COUNT,
            
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) NOT IN ('DRAFT')
                AND LAD.BRANCH_ID IS NOT NULL 
                AND LAH_DEAL.LOAN_APPLICATION_NO IS NOT NULL
                THEN LAD.REQUEST_LOAN_AMOUNT 
                ELSE 0 
            END AS LOGIN_AMOUNT,
            
            -- SANCTION CALCULATIONS
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) <> 'DRAFT'
                AND LAD.BRANCH_ID IS NOT NULL
                AND LAH_SANCTION.LOAN_APPLICATION_NO IS NOT NULL
                THEN 1 
                ELSE 0 
            END AS SANCTION_COUNT,
            
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) <> 'DRAFT'
                AND LAD.BRANCH_ID IS NOT NULL
                AND LAH_SANCTION.LOAN_APPLICATION_NO IS NOT NULL
                THEN LAD.SANCTION_AMOUNT 
                ELSE 0 
            END AS SANCTION_AMOUNT,
            
            -- REJECT CALCULATIONS
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) <> 'DRAFT'
                AND LAD.BRANCH_ID IS NOT NULL
                AND LAH_REJECTED.LOAN_APPLICATION_NO IS NOT NULL
                THEN 1 
                ELSE 0 
            END AS REJECT_COUNT,
            
            CASE 
                WHEN UPPER(LAD.LOAN_APP_FIRST_NAME) <> 'LOANAPPFIRSTNAME'
                AND UPPER(LAD.LOAN_APPLICATION_STAGE) <> 'DRAFT'
                AND LAD.BRANCH_ID IS NOT NULL
                AND LAH_REJECTED.LOAN_APPLICATION_NO IS NOT NULL
                THEN LAD.REQUEST_LOAN_AMOUNT 
                ELSE 0 
            END AS REJECT_AMOUNT,
            
            -- DRAFT STAGE COUNT
            CASE 
                WHEN UPPER(LAD.LOAN_APPLICATION_STAGE) = 'DRAFT'
                AND UPPER(LAD.LOAN_APPLICATION_STATUS) <> 'REJECTED'
                THEN 1 
                ELSE 0 
            END AS LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT,
            
            LAD.DSA_NAME,
            LAD.IMD_PAYMENT_MODE,
            CASE 
                WHEN IMD_PAYMENT_MODE IS NULL 
                THEN 'UNREALIZED' 
                ELSE 'REALIZED' 
            END AS IMD_STATUS,
            
            -- DRAFT FILE STATUS
            CASE 
                WHEN UPPER(LAD.LOAN_APPLICATION_STATUS) IN ('DEAL CREATED', 'NEW') 
                    AND LAD.LOAN_APPLICATION_STAGE = 'DRAFT' 
                    THEN 'OPEN'
                WHEN (LAD.LOAN_APPLICATION_STATUS IS NULL 
                    OR UPPER(LAD.LOAN_APPLICATION_STATUS) ='NO STATUS') 
                    AND LAD.LOAN_APPLICATION_STAGE = 'DRAFT' 
                    THEN 'NO STATUS'
                WHEN UPPER(LAD.LOAN_APPLICATION_STATUS)= 'REJECTED' 
                    AND UPPER(LAD.LOAN_APPLICATION_STAGE)='DRAFT' 
                    THEN 'REJECTED' 
                ELSE NULL 
            END AS DRAFT_FILE_STATUS,
            
            LAD.PRODUCT_CATEGORY,
            
            -- CONSTITUTION
            CASE 
                WHEN UPPER(CUST_DTL.CUST_OCCUPATION) LIKE '%SELF%' THEN 'SELF_EMPLOYED'
                WHEN UPPER(CUST_DTL.CUST_OCCUPATION) LIKE '%SEP%' THEN 'SELF_EMPLOYED'
                WHEN UPPER(CUST_DTL.CUST_OCCUPATION) LIKE '%SAL%' THEN 'SALARIED'
                WHEN UPPER(CUST_DTL.CUST_OCCUPATION) IN ('BSP','BSG') THEN 'SALARIED'
                ELSE 'OTHER' 
            END AS CONSTITUTION,
            
            LAD.SCHEME_NAME AS SCHEME,
            LAH_DEAL.DEAL_FORWARD_DATE,
            LAH_IMD_SUBMITTED.IMD_SUBMITTED_DATE,
            LAH_SANCTION.SANCTION_DATE,
            LAH_REJECTED.REJECTION_DATE,
            LAD.DEL_FLAG
			
        ---- SELECT THE MOST RECENT ROW (BASED ON START_DATE) FOR EACH UNIQUE_SYS_ID    
        FROM (SELECT *  FROM LOAN_APPLICATION_DETAIL QUALIFY
				ROW_NUMBER() OVER(PARTITION BY UNIQUE_SYS_ID ORDER BY START_DATE DESC)=1) LAD 
        LEFT JOIN CUSTOMER_DETAILS CUST_DTL
            ON LAD.CUST_ID = CUST_DTL.UNIQUE_SYS_ID
        LEFT JOIN (
		---DEAL_FORWARD_DATE=> MAXIMUM CREATED DATE FOR EACH LOAN_APPLICATION_NO WHERE OLD_VALUE='DRAFT', NEW_VALU='APP_PROCESSING' AND UPDATE_FIELD='STAGE__C'
            SELECT 
                MAX(CREATED_DATE) AS DEAL_FORWARD_DATE,
                LOAN_APPLICATION_NO
            FROM LOAN_APPLICATION_HISTORY LAH
            WHERE UPPER(OLD_VALUE) = 'DRAFT' 
            AND UPPER(LAH.NEW_VALUE) = 'APPLICATION PROCESSING' 
            AND UPPER(LAH.UPDATE_FIELD) = 'STAGE__C'
            GROUP BY LOAN_APPLICATION_NO
        ) AS LAH_DEAL
            ON LAH_DEAL.LOAN_APPLICATION_NO = LAD.UNIQUE_SYS_ID
        LEFT JOIN (
            SELECT                 
				MAX(LAH.CREATED_DATE) AS IMD_SUBMITTED_DATE,
                LAH.LOAN_APPLICATION_NO,
            FROM LOAN_APPLICATION_HISTORY LAH  
			JOIN (
				SELECT *  FROM LOAN_APPLICATION_DETAIL WHERE START_DATE IS NOT NULL AND END_DATE IS NULL) LAD 
				ON LAH.LOAN_APPLICATION_NO = LAD.UNIQUE_SYS_ID
            WHERE UPPER(LAH.UPDATE_FIELD) = 'IMD_FEES_SUBMITTED__C' 
            AND ((UPPER(LAD.IMD_PAYMENT_MODE)='DIGITAL' AND UPPER(LAH.NEW_VALUE)='PROCESSED')
				OR(UPPER(LAD.IMD_PAYMENT_MODE)='CASH' AND UPPER(LAH.NEW_VALUE)IN ( 'COLLECTED', 'RECEIVED'))
				OR(UPPER(LAD.IMD_PAYMENT_MODE)='CHEQUE' AND UPPER(LAH.NEW_VALUE)IN ( 'SUBMITTED')))
            GROUP BY LAH.LOAN_APPLICATION_NO
        ) AS LAH_IMD_SUBMITTED
            ON LAH_IMD_SUBMITTED.LOAN_APPLICATION_NO = LAD.UNIQUE_SYS_ID
        LEFT JOIN (
            SELECT 
                MIN(CREATED_DATE) AS SANCTION_DATE,
                LOAN_APPLICATION_NO 
            FROM LOAN_APPLICATION_HISTORY  
            WHERE UPPER(NEW_VALUE) = 'SANCTION' 
            AND UPPER(UPDATE_FIELD) = 'STAGE__C'
            GROUP BY LOAN_APPLICATION_NO
        ) AS LAH_SANCTION
            ON LAH_SANCTION.LOAN_APPLICATION_NO = LAD.UNIQUE_SYS_ID
        LEFT JOIN (
            SELECT 
                MAX(CREATED_DATE) AS REJECTION_DATE,
                LOAN_APPLICATION_NO 
            FROM LOAN_APPLICATION_HISTORY 
            WHERE UPPER(NEW_VALUE) IN ('REJECTED', 'SOFT REJECTED') 
            AND UPPER(UPDATE_FIELD) = 'STATUS__C'
			AND LOAN_APPLICATION_NO 
			NOT IN(SELECT LOAN_APPLICATION_NO FROM LOAN_APPLICATION_HISTORY WHERE UPPER(UPDATE_FIELD) = 'STAGE__C' AND UPPER(NEW_VALUE) = 'SANCTION')
            GROUP BY LOAN_APPLICATION_NO
        ) AS LAH_REJECTED
            ON LAH_REJECTED.LOAN_APPLICATION_NO = LAD.UNIQUE_SYS_ID
    ) PRE_FINAL
    WHERE UPPER(DEL_FLAG) = 'FALSE';
	
-- Merge statement
    MERGE INTO DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART T
    USING DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART_PREFINAL S
    ON T.LOAN_APPLICATION_NO = S.LOAN_APPLICATION_NO 
        AND T.CURRENT_FLAG = TRUE
    WHEN MATCHED 
        AND SHA2(ARRAY_TO_STRING([
            S.LOAN_APPLICATION_NO, 
            S.LOAN_APPLICATION_NAME, 
            S.PRODUCT_ID, 
            S.VENDOR_ID, 
            S.RO_ID, 
            S.BRANCH_ID, 
            S.LEAD_ID, 
            S.DEAL_FORWARD_DATE, 
            S.REQUEST_LOAN_AMOUNT, 
            S.IMD_SUBMITTED_DATE, 
            S.SANCTION_DATE, 
            S.REJECTION_DATE, 
            S.CREATED_DATE_LAC, 
            S.LOGIN_COUNT, 
            S.LOGIN_AMOUNT, 
            S.IMD_CLEARED_LOGINS_COUNT, 
            S.IMD_CLEARED_LOGINS_AMOUNT, 
            S.SANCTION_COUNT, 
            S.SANCTION_AMOUNT, 
            S.WIP_COUNT, 
            S.WIP_AMOUNT, 
            S.SUD_COUNT, 
            S.SUD_AMOUNT, 
            S.REJECT_COUNT, 
            S.REJECT_AMOUNT, 
            S.LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT, 
            S.DSA_NAME, 
            S.IMD_PAYMENT_MODE, 
            S.IMD_STATUS, 
            S.DRAFT_FILE_STATUS, 
            S.REJECTION_REASON_SUBMISSION, 
            S.LOAN_APPLICATION_STAGE, 
            S.DEL_FLAG, 
            S.PRODUCT_CATEGORY, 
            S.CONSTITUTION, 
            S.SCHEME
        ], ''), 256) <> T.ROW_HASH
    THEN UPDATE SET 
        CURRENT_FLAG = FALSE,
        END_TIMESTAMP = CURRENT_TIMESTAMP()
    WHEN NOT MATCHED THEN 
    INSERT (
        SURROGATE_ID, 
        DURABLE_ID, 
        LOAN_APPLICATION_NO, 
        LOAN_APPLICATION_NAME, 
        PRODUCT_ID, 
        VENDOR_ID, 
        RO_ID, 
        BRANCH_ID, 
        LEAD_ID, 
        DAILY_DATE, 
        DEAL_FORWARD_DATE, 
        REQUEST_LOAN_AMOUNT, 
        IMD_SUBMITTED_DATE, 
        SANCTION_DATE, 
        REJECTION_DATE, 
        CREATED_DATE_LAC, 
        LOGIN_COUNT, 
        LOGIN_AMOUNT, 
        IMD_CLEARED_LOGINS_COUNT, 
        IMD_CLEARED_LOGINS_AMOUNT, 
        SANCTION_COUNT, 
        SANCTION_AMOUNT, 
        WIP_COUNT, 
        WIP_AMOUNT, 
        SUD_COUNT, 
        SUD_AMOUNT, 
        REJECT_COUNT, 
        REJECT_AMOUNT, 
        LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT, 
        DSA_NAME, 
        IMD_PAYMENT_MODE, 
        IMD_STATUS, 
        DRAFT_FILE_STATUS, 
        REJECTION_REASON_SUBMISSION, 
        LOAN_APPLICATION_STAGE, 
        DEL_FLAG, 
        PRODUCT_CATEGORY, 
        CONSTITUTION, 
        SCHEME, 
        START_TIMESTAMP, 
        END_TIMESTAMP, 
        CURRENT_FLAG
    )
    VALUES (
        :MAX_SURROGATE_KEY + ROW_NUMBER() OVER(ORDER BY S.LOAN_APPLICATION_NO),
        :MAX_SURROGATE_KEY + ROW_NUMBER() OVER(ORDER BY S.LOAN_APPLICATION_NO),
        S.LOAN_APPLICATION_NO, 
        S.LOAN_APPLICATION_NAME, 
        S.PRODUCT_ID, 
        S.VENDOR_ID, 
        S.RO_ID, 
        S.BRANCH_ID, 
        S.LEAD_ID, 
        CURRENT_DATE(), 
        S.DEAL_FORWARD_DATE, 
        S.REQUEST_LOAN_AMOUNT, 
        S.IMD_SUBMITTED_DATE, 
        S.SANCTION_DATE, 
        S.REJECTION_DATE, 
        S.CREATED_DATE_LAC, 
        S.LOGIN_COUNT, 
        S.LOGIN_AMOUNT, 
        S.IMD_CLEARED_LOGINS_COUNT, 
        S.IMD_CLEARED_LOGINS_AMOUNT, 
        S.SANCTION_COUNT, 
        S.SANCTION_AMOUNT, 
        S.WIP_COUNT, 
        S.WIP_AMOUNT, 
        S.SUD_COUNT, 
        S.SUD_AMOUNT, 
        S.REJECT_COUNT, 
        S.REJECT_AMOUNT, 
        S.LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT, 
        S.DSA_NAME, 
        S.IMD_PAYMENT_MODE, 
        S.IMD_STATUS, 
        S.DRAFT_FILE_STATUS, 
        S.REJECTION_REASON_SUBMISSION, 
        S.LOAN_APPLICATION_STAGE, 
        S.DEL_FLAG, 
        S.PRODUCT_CATEGORY, 
        S.CONSTITUTION, 
        S.SCHEME, 
        CURRENT_TIMESTAMP(), 
        NULL, 
        TRUE
    );

    -- Insert new versions for updated records
    INSERT INTO DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART (
        SURROGATE_ID, 
        DURABLE_ID, 
        LOAN_APPLICATION_NO, 
        LOAN_APPLICATION_NAME, 
        PRODUCT_ID, 
        VENDOR_ID, 
        RO_ID, 
        BRANCH_ID, 
        LEAD_ID, 
        DAILY_DATE, 
        DEAL_FORWARD_DATE, 
        REQUEST_LOAN_AMOUNT, 
        IMD_SUBMITTED_DATE, 
        SANCTION_DATE, 
        REJECTION_DATE, 
        CREATED_DATE_LAC, 
        LOGIN_COUNT, 
        LOGIN_AMOUNT, 
        IMD_CLEARED_LOGINS_COUNT, 
        IMD_CLEARED_LOGINS_AMOUNT, 
        SANCTION_COUNT, 
        SANCTION_AMOUNT, 
        WIP_COUNT, 
        WIP_AMOUNT, 
        SUD_COUNT, 
        SUD_AMOUNT, 
        REJECT_COUNT, 
        REJECT_AMOUNT, 
        LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT, 
        DSA_NAME, 
        IMD_PAYMENT_MODE, 
        IMD_STATUS, 
        DRAFT_FILE_STATUS, 
        REJECTION_REASON_SUBMISSION, 
        LOAN_APPLICATION_STAGE, 
        DEL_FLAG, 
        PRODUCT_CATEGORY, 
        CONSTITUTION, 
        SCHEME, 
        START_TIMESTAMP,
        END_TIMESTAMP, 
        CURRENT_FLAG
    )
    SELECT 
        :MAX_SURROGATE_KEY + ROW_NUMBER() OVER(ORDER BY S.LOAN_APPLICATION_NO),
        T.DURABLE_ID,
        S.LOAN_APPLICATION_NO, 
        S.LOAN_APPLICATION_NAME, 
        S.PRODUCT_ID, 
        S.VENDOR_ID, 
        S.RO_ID, 
        S.BRANCH_ID, 
        S.LEAD_ID, 
        CURRENT_DATE(), 
        S.DEAL_FORWARD_DATE, 
        S.REQUEST_LOAN_AMOUNT, 
        S.IMD_SUBMITTED_DATE, 
        S.SANCTION_DATE, 
        S.REJECTION_DATE, 
        S.CREATED_DATE_LAC, 
        S.LOGIN_COUNT, 
        S.LOGIN_AMOUNT, 
        S.IMD_CLEARED_LOGINS_COUNT, 
        S.IMD_CLEARED_LOGINS_AMOUNT, 
        S.SANCTION_COUNT, 
        S.SANCTION_AMOUNT, 
        S.WIP_COUNT, 
        S.WIP_AMOUNT, 
        S.SUD_COUNT,
        S.SUD_AMOUNT,
        S.REJECT_COUNT, 
        S.REJECT_AMOUNT, 
        S.LOAN_APPLICATION_IN_DRAFT_STAGE_COUNT, 
        S.DSA_NAME, 
        S.IMD_PAYMENT_MODE, 
        S.IMD_STATUS, 
        S.DRAFT_FILE_STATUS, 
        S.REJECTION_REASON_SUBMISSION, 
        S.LOAN_APPLICATION_STAGE, 
        S.DEL_FLAG, 
        S.PRODUCT_CATEGORY, 
        S.CONSTITUTION, 
        S.SCHEME, 
        CURRENT_TIMESTAMP(),
        NULL,
        TRUE
    FROM DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART_PREFINAL S
    JOIN DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART T
        ON T.LOAN_APPLICATION_NO = S.LOAN_APPLICATION_NO
        AND T.CURRENT_FLAG = FALSE
        AND T.END_TIMESTAMP = CURRENT_TIMESTAMP();
	
	--DROP TEMP TABLE
	DROP TABLE IF EXISTS DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART_PREFINAL;
	
    RETURN 'SUCCESSFULLY LOADED DATA INTO DISHA_L2_CURATED.BASE_HARDCODE.TEST_LOAN_APPLICATION_MART';
END;
$$;

